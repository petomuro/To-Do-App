import{c as V,r as N,u as O,f as E,a as P,b as I}from"./index-d35bf5c5.js";import{d as M,r as R,a as j,o as l,c as d,F as v,b,e as o,f as T,g as C,n as A,u as D,t as S,h as U,w as L,i as F,j as W,k as Y,l as q}from"./index-0b2df9df.js";const H={key:0,class:"flex flex-column p-3"},J={class:"flex flex-column justify-content-center p-3"},z=o("span",{class:"text-primary"},"Title",-1),G={class:"text-black-alpha-90"},K=o("hr",{class:"mx-1"},null,-1),Q={key:2,class:"flex align-items-center py-3"},X=["onClick"],Z=["onClick"],ee={key:3,class:"flex align-items-center py-3"},te=["onClick"],ae=["onClick"],se={class:"flex flex-column"},oe=M({__name:"TheBoards",props:{boardsData:null},emits:["deleteBoard","createBoard","isEditingBoard","updateBoard"],setup(g,{emit:u}){const r=g,x={collection:{$each:V.forEach({title:{required:N}})}},s=R({collection:r.boardsData}),m=O(x,s),c=async()=>await m.value.$validate(),p=j(r.boardsData),_=n=>{u("deleteBoard",n)},B=()=>{u("createBoard")},y=n=>{const i=E(r.boardsData,n);r.boardsData[i].is_adding_board?_(n):u("isEditingBoard",{boardIndex:i,is_editing_board:!r.boardsData[i].is_editing_board})},k=async n=>{const i=E(r.boardsData,n);await c()&&u("updateBoard",{boardIndex:i,boardId:n,newBoard:p.value[i]})};return(n,i)=>{const h=C("InputText"),w=C("RouterLink"),$=C("TheButton");return l(),d(v,null,[(l(!0),d(v,null,b(g.boardsData,(t,e)=>(l(),d("div",{key:t.id,class:A([{errorName:D(m).collection.$each.$response.$errors[e].title.length},"flex flex-column justify-content-center bg-gray-200 border-round-xl m-3 w-20rem"])},[t!=null&&t.is_editing_board?(l(),d("div",H,[o("label",{class:A([{"p-error":D(m).collection.$each.$response.$errors[e].title.length},"text-primary"]),for:"name"},"Title*",2),T(h,{modelValue:p.value[e].title,"onUpdate:modelValue":a=>p.value[e].title=a,placeholder:"Add title for board",type:"text"},null,8,["modelValue","onUpdate:modelValue"]),(l(!0),d(v,null,b(D(m).collection.$each.$response.$errors[e].title,a=>(l(),d("div",{key:a,class:"p-error"},S(a.$message.replace("Value","Title")),1))),128))])):(l(),U(w,{key:1,to:`/${t==null?void 0:t.id}`,class:"no-underline"},{default:L(()=>[o("div",J,[z,o("h2",G,S(t==null?void 0:t.title),1)])]),_:2},1032,["to"])),K,t!=null&&t.is_editing_board?(l(),d("div",Q,[o("i",{class:"pi pi-check mx-3 cursor-pointer text-primary",onClick:a=>k(t==null?void 0:t.id)},null,8,X),o("i",{class:"pi pi-times cursor-pointer text-red-800",onClick:a=>y(t==null?void 0:t.id)},null,8,Z)])):(l(),d("div",ee,[o("i",{class:"pi pi-pencil mx-3 cursor-pointer text-blue-800",onClick:a=>y(t==null?void 0:t.id)},null,8,te),o("i",{class:"pi pi-trash cursor-pointer text-red-800",onClick:a=>_(t==null?void 0:t.id)},null,8,ae)]))],2))),128)),o("div",se,[T($,{class:"m-3",label:"+ Add new board",onClick:i[0]||(i[0]=t=>B())})])],64)}}}),ie=q('<div class="flex flex-column align-items-center p-3 bg-cadet-blue"><div class="flex flex-column align-items-end"><h1 class="text-7xl">todo app</h1><p class="-mt-3">BY PETER MURIN</p></div><div class="flex flex-column"><h2>Hey, What&#39;s up! What do you want to do today?</h2><h2>Start adding items to your to-do list</h2></div></div>',1),ne={class:"flex flex-wrap justify-content-center p-3 bg-flora-white"},le=o("div",{class:"flex justify-content-center p-3"},[o("h1",{class:"text-black-alpha-90"},"KEEP YOUR DAYS ORGANISED WITH TODO APP")],-1),de=M({__name:"IntroPage",async setup(g){let u,r;const x=P(),s=j([]),m=F(),c=W(),p=()=>{x.setBoards(s.value)},_=async()=>await(await fetch("https://63d3f5218d4e68c14eb69fe7.mockapi.io/api/v1/boards")).json(),B=async()=>{try{s.value=await _(),p()}catch(e){c.add({severity:"error",summary:"Error Message",detail:e,life:3e3})}},y=async()=>{(await _()).length>I().value.length?await B():s.value=I().value},k=async e=>{try{await fetch(`https://63d3f5218d4e68c14eb69fe7.mockapi.io/api/v1/boards/${e}`,{method:"DELETE"}),c.add({severity:"success",summary:"Success Message",detail:"Board deleted successfully",life:3e3})}catch(a){c.add({severity:"error",summary:"Error Message",detail:a,life:3e3})}},n=async e=>{await m.require({message:"Are you sure you want to proceed?",header:"Confirmation",icon:"pi pi-exclamation-triangle",accept:async()=>{const a=E(s.value,e);s.value.splice(a,1),await k(e),p()},reject:()=>{}})},i=async()=>{s.value.push({id:s.value.length+1,title:"",is_adding_board:!0,is_editing_board:!1});const e=s.value.length-1;await h({boardIndex:e,is_editing_board:!0})},h=async e=>{s.value[e.boardIndex].is_editing_board=e.is_editing_board,e.is_editing_board||await y()},w=async e=>{try{await fetch("https://63d3f5218d4e68c14eb69fe7.mockapi.io/api/v1/boards",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:s.value[e.boardIndex].title})}),c.add({severity:"success",summary:"Success Message",detail:"Board created successfully",life:3e3})}catch(a){c.add({severity:"error",summary:"Error Message",detail:a,life:3e3})}},$=async e=>{try{await fetch(`https://63d3f5218d4e68c14eb69fe7.mockapi.io/api/v1/boards/${e.boardId}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(s.value[e.boardIndex])}),c.add({severity:"success",summary:"Success Message",detail:"Board updated successfully",life:3e3})}catch(a){c.add({severity:"error",summary:"Error Message",detail:a,life:3e3})}},t=async e=>{s.value[e.boardIndex]=e.newBoard,s.value[e.boardIndex].is_editing_board=!1,s.value[e.boardIndex].is_adding_board?(s.value[e.boardIndex].is_adding_board=!1,await w(e)):await $(e),p()};return[u,r]=Y(()=>y()),await u,r(),(e,a)=>(l(),d(v,null,[ie,o("div",ne,[T(oe,{"boards-data":s.value,onDeleteBoard:a[0]||(a[0]=f=>n(f)),onCreateBoard:a[1]||(a[1]=f=>i()),onIsEditingBoard:a[2]||(a[2]=f=>h(f)),onUpdateBoard:a[3]||(a[3]=f=>t(f))},null,8,["boards-data"])]),le],64))}});export{de as default};
